<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo搭建Github Pages个人博客（二）]]></title>
    <url>%2F2019%2F07%2F14%2Flearn-hexo-02%2F</url>
    <content type="text"><![CDATA[有点无聊，有点焦虑。 今天下午刚搞完第一波Hexo的部署，晚上又闲的没事干，那就继续捣鼓这个博客吧。 这是第二篇有关Hexo的文章，没有看过第一篇的可以去瞅瞅： Hexo搭建Github Pages个人博客（一） 一、背景动画相信大家在浏览网站时肯定见过网页背景随鼠标移动而变化的特效，以前以为很高大上，原来就是引一个js库的事。 这个功能仅适用于next主题，其他主题没有实验过。 打开/themes/next/_config.yml，搜索Animation Settings，第一个默认是开启的，看着可配置项有fadeIn之类的，猜想应该就是首页加载时各个部件的渐隐效果，那就不去动它了。 下面第二个叫pace的，看注释应该是进度条动画，那我觉得聊胜于无，开启就是了。下面就以这个库为例，讲一下怎么开启这个动画效果。 首先当然是要把pace.enable设置为true，单单这样是不够的，next主题并没有包含这个插件。如果就这样去运行，页面不会发生任何变化，而且控制台还会报404错误。 因此下一步就是去下载这个插件，next主题很贴心地把插件的地址放在了注释里面： 下载之后将其解压到/themes/next/sources/lib下面，然后将文件夹重命名为pace。 其他插件的导入方式类似，文件夹的名称要和配置文件中的名称保持一致。 导入成功之后就可以运行查看效果了。默认的minimal是浏览器顶部的一个蓝色进度条动画（页面加载时显示，普通情况下一条黑边）。 为了方便大家对比，也是解决这个无聊的周末夜晚，我一个一个把这些效果实验一下，供大家参考： 1、进度条动画主题描述 进度条下面的就都是背景动画了，官方文档说不能同时开启两个，但我试了一下，可以呀，只是不太好看而已~ 我也把所有的背景动画的特效试了一下，大家可以看截图选择自己看着舒服的。 2、背景动画特效展示 注意：下载的插件要把目录中的.github目录删掉，否则提交到github之后会找不到插件的路径。 二、百度统计详见https://theme-next.iissnan.com/third-party-services.html#analytics-baidu 配置成功后可以将项目发布在github上，然后检查是否安装正确： 三、谷歌站点收录详见https://theme-next.iissnan.com/third-party-services.html#google-webmaster-tools 刚刚配置的时候忘了截图了，现在已经找不到那个页面了。 不过只要注意在输入网址之后展开第一种验证方式就可以找到我们要的代码了。 四、本地搜索功能用第三方搜索还要注册还要收费，我只需要一个简单的搜索哦~ 详见https://theme-next.iissnan.com/third-party-services.html#local-search 搭建完成的效果也还OK 五、显示文章基本信息就是这种效果： 打开_config.yml配置站点： 12345symbols_count_time: symbols: true # 文章字数 time: true # 阅读时长 total_symbols: true # 所有文章总字数 total_time: true # 所有文章阅读中时长 打开/themes/next/_config.yml配置主题： 123456symbols_count_time: separated_meta: true # 是否换行显示 字数统计 及 阅读时长 item_text_post: true # 文章 字数统计 阅读时长 使用图标 还是 文本表示 item_text_total: false # 博客底部统计 字数统计 阅读时长 使用图标 还是 文本表示 awl: 4 wpm: 275 这样我们只是配置好了，但是插件还没有安装，下面就安装插件（网上看的一篇文章说next主题自带该插件，我信以为真，结果死活不显示统计数量，也不报错，还专门去github上下载该插件，结果最后才发现是要用npm安装的。。。） 1$ yarn add hexo-symbols-count-time 然后重新运行就可以了，底部也会出现整个站点的统计字数。 六、滚动时显示文章进度在主题配置中搜索back2top，然后你懂的~ 123456back2top: enable: true # 在侧边栏显示该控件 sidebar: true # 显示阅读进度 scrollpercent: true 然后效果如下： 在点击这个控件后就会返回顶部。 虽然说放在侧边栏与潜意识里的返回顶部按钮不同，且用百分比来装饰，让人误以为它只是用来显示而不能点击的。但胜在能与周围融为一体呀，我不管，我就要这么设置！ 七、生成网站地图第三步已经生成了谷歌的站点地图，这里的设置主要是针对百度的。 安装sitemap插件： 12$ yarn add hexo-generator-sitemap$ yarn add hexo-generator-baidu-sitemap 然后将站点配置文件中的url改为自己的github地址即可。 重新运行，从地址栏输入/baidusitemap.xml查看有没有生成。 似乎百度不能抓取github.io下的内容，那搞它有什么用，不搞了不搞了。 八、附录1、进度条动画主题描述 theme 效果描述 big-counter 页面右上角显示加载百分比（数字） bounce 页面右上角显示一个跳动的小球，逐渐远去并消失 barber-shop 整个页面都被进度条占满。。。 center-atom 页面中间显示一个小花，花朵中间显示加载百分比 center-circle 页面中间显示有百分比的圆，有一个翻转消失的动画 center-radar 页面中间一个雷达旋转的动画 center-simple 顾名思义，特别简单，页面中间一个进度条 corner-indicator 右上角一个切角，里面是转圈的线条 fill-left 从左到右填充页面，与barber-shop的区别是不会遮挡页面元素。（十分不推荐选这个） flat-top 页面上方显示一个较宽的进度条 flash 页面上方显示较细的进度条，同时右上角有个加载状态的圆。（整体感觉不错，我可能会选它） loading-bar 同样是页面中间一个进度条。。 mac-osx 页面产生波浪，顶部有进度条。。（不是太好看呀，感觉侮辱了macOs呀） material 页面中间一个透明的圆，里面是百分比。（挺清爽的感觉，还可以） minimal 页面上方显示一个很细的进度条 这些主题尝试下来，有一个共同的特点，在页面超过一屏的情况下，顶部会有一个黑色的进度条区域（不管这里会不会显示进度条），所以建议选择带有顶部进度条的主题。 2、背景动画特效展示canvas_nest: 就是红框中的那些线条，可以跟随鼠标移动。 three.three_waves: three共包含三种特效，因此配置文件中有两个开关都要打开才行。 效果挺震撼的，在页面空白区域比较多的时候看着特别爽。 three.canvas_lines: three.canvas_sphere: 这个动画动的幅度比较小，一般只能在页面切换时才能看到，平时就被文章给盖住了。 canvas_ribbon： 这个不会动，只会在鼠标点击时切换背景。 总的来说，这些动画都挺好看的，但是我就觉得有一种哗众取宠的感觉。我的注意力应该放在文字本身，你旁边动来动去的背景是想干啥？ 所以最终我选择了奢华低调有内涵的three.canvas_sphere 最后，还是想说一下，本来想搞一个评论系统的，结果leanCloud刚实名认证不能创建应用，其他的要么被墙要么收费，真是难为死我了。 说不得还得来个Hexo系列文章三呢。]]></content>
      <categories>
        <category>好多坑</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo搭建Github Pages个人博客（一）]]></title>
    <url>%2F2019%2F07%2F14%2Flearn-hexo-01%2F</url>
    <content type="text"><![CDATA[以前也了解过Hexo，但因为各种操作都需要敲命令，我这么懒，就是不想敲命令~所以就没怎么玩过这个。这些天无意间了解到有个Hexo的客户端，觉得可以试试了。 搭建完成之后文章列表只有一篇HelloWorld，不能忍不能忍，于是诞生了这篇文章。。。。 一、开启Github Pages在Github中创建一个新的仓库，仓库名字为：[你的用户名].github.io,例如我的用户名为godbobo，那么填写的名称就是godbobo.github.io 其他什么都不用填，点击创建。然后打开该项目的Settings: 在Github Pages这个栏目下点击Choose Theme。（我这个是已经创建好的，界面和没有创建过的是不一样的） 然后会跳转到选择主题的界面，直接默认第一个就好，反正后面还要换成Hexo的，选择之后在新的页面点击commit提交更改，一个崭新的Github Pages就建立好了，并且可以直接通过刚才的项目名进行访问。 一个账号只能有一个Github Pages可以通过这种方式访问。 到这一步，Github Pages就算是配置好了，下面就要开始激动人心的Hexo配置了。 二、安装Hexo首先全局安装Hexo脚手架： 1$ npm install hexo-cli -g 不知道为什么，我用yarn安装之后命令行没有hexo这个命令，万般无奈之下，我还是用了npm来安装。。。 用脚手架初始化博客目录： 123$ hexo init godbobo.github.io$ cd godbobo.github.io$ yarn 这里为了保险起见我没把项目放到中文目录下，直接在D盘建的文件夹。 生成并运行Hexo： 12345$ hexo clean# g 即 generate$ hexo g# s 即 serve$ hexo s 打开浏览器localhost:4000，即可看到效果： 注意到地址栏了吗？我已经把它部署到Github Pages上了，要实现这样的效果，请看下回分解~ 哦不，是下一步。 三、部署到Github Pages本地安装git以及如何连接到github的过程就不在这里讲了，下面直接开始正文： 安装hexo-deployer-git： 1$ yarn add hexo-deployer-git 在生成的项目中可以看到有一个_config.yml的文件，它是hexo的用户配置文件： 我们需要在这里配置自己刚刚创建的Github Pages地址，在该文件中搜索deploy或直接到文件末尾，做出类似下图的修改： 然后命令行中输入： 12# d 即 deploy$ hexo d 如果是第一次执行这个命令会让你输入github的账号密码，输入之后就能够发布到Github Pages上了。 四、个性化配置1、主题配置主题可以在https://hexo.io/themes上面找到自己满意的，不过这里我还是推荐朴素又不失内涵的next主题，它还有四个子主题可供选择。 将主题下载下来后(直接download zip就行了，用git命令感觉好慢)，解压并将目录重命名为next，然后放到hexo项目的/themes/下。 然后打开项目（站点）配置文件_config.yml，搜索theme或直接到文件末尾，将默认主题改为next即可。 然后重新运行hexo s就可以看到主题已经改变。 2、设置语言运行后发现整个页面都是英文，我大字都不识几个让我看英文？这可不行。 打开站点配置文件_config.yml及主题配置文件/themes/next/_config.yml，搜索到language，并将其改为zh-CN即可。 放上我更换主题以及换了语言之后的页面样子： 3、设置next子主题咦，你的next主题怎么和我的不一样？我也要我也要~ 在刚刚hexo-next的github页面可以看到这个主题下一共有四个子主题可供选择： 经过一番挑选，我觉得Gemini可能更养眼一点，打开主题配置文件/themes/next/_config.yml，搜索scheme，将其改为Gemini并重新生成页面即可。 4、支持RSS如果自己能读到自己的Feed，那该有多好~ 安装hexo-generator-feed插件： 1$ yarn add hexo-generator-feed 完毕！ 没错，就是这么简单！ 点击RSS链接，就会跳转到atom.xml页面，这就表示RSS已经成功生成了。 五、使用hexo-client说了大半天，花里胡哨，我要怎么不费吹灰之力新建文章编辑文章？ 打开https://github.com/gaoyoubo/hexo-client这个仓库，在README的最下方有最新版的下载地址，然后下载并安装。 首次进入需要设置hexo项目的目录，设置即可。 目前整个项目还很简陋，编辑文章时虽说有上传图片的功能，但却不能通过剪切板上传，还是很鸡肋的。所以现在这篇文章我就是通过Typora来编写，PicGo来上传图片的。 整个软件用起来并不复杂，稍微摸索以下就会了，只是添加标签和分类的功能肉眼是找不到的，需要在编辑文章时找到Front-matter，在这个里面配置标签、分类信息： 其中title为tags表示标签，categories表示分类，如果要添加多个，需要使用yml文件的数组格式。 附录在查找问题的过程中了解到Hexo的文档，以后要深入折腾的话可以参考一下： Hexo文档 Hexo-Next主题配置文档 一般来说，每次更改内容后，最好要依次执行以下下面三个命令： 1234# 这条不执行应该也可以，我这里每次改东西后不执行它也不会有问题$ hexo clean$ hexo g$ hexo s 最后，看hexo官网中的描述，还有好多花样自己没有尝试过，比如评论功能，所以后续应该会有第二篇写hexo的文章。]]></content>
      <categories>
        <category>好多坑</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
